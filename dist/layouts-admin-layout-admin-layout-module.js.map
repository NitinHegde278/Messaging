{"version":3,"sources":["./node_modules/@angular/material/fesm5/grid-list.js","./node_modules/@angular/material/fesm5/tabs.js","./node_modules/angular2-text-show-more-less/text-show-more-less.umd.js","./node_modules/ngx-slick-carousel/fesm5/ngx-slick-carousel.js","./src/app/dashboard/dashboard.component.html","./src/app/excel-report/excel-report.component.html","./src/app/forwarded-report/forwarded-report.component.html","./src/app/mobile-users/mobile-users.component.html","./src/app/sent-report/sent-report.component.html","./src/app/total-messages/total-messages.component.html","./src/app/video-upload/upload-response/upload-response.component.html","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.service.ts","./src/app/excel-report/excel-report.component.css","./src/app/excel-report/excel-report.component.ts","./src/app/forwarded-report/forwarded-report.component.css","./src/app/forwarded-report/forwarded-report.component.ts","./src/app/layouts/admin-layout/admin-layout.module.ts","./src/app/layouts/admin-layout/admin-layout.routing.ts","./src/app/mobile-users/mobile-users.component.scss","./src/app/mobile-users/mobile-users.component.ts","./src/app/mobile-users/mobile-users.service.ts","./src/app/read-more/read-more.scss","./src/app/read-more/read-more.ts","./src/app/sent-report/sent-report.component.css","./src/app/sent-report/sent-report.component.ts","./src/app/total-messages/total-messages.component.css","./src/app/total-messages/total-messages.component.ts","./src/app/video-upload/upload-response/upload-response.component.scss","./src/app/video-upload/upload-response/upload-response.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiL;AACtF;AAC9B;AACjB;AACO;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAc;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB,EAAE;AAClD,+BAA+B,4BAA4B,kFAAoB,SAAS,EAAE;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,sBAAsB,EAAE;AAClD,+BAA+B,4BAA4B,kFAAoB,SAAS,EAAE;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mCAAmC,+DAAiB;AACpD,qCAAqC,qEAAuB;AAC5D,6CAA6C,cAAc,kBAAkB,eAAe,cAAc,kBAAkB,gBAAgB,2BAA2B,MAAM,OAAO,QAAQ,SAAS,kBAAkB,aAAa,mBAAmB,uBAAuB,YAAY,UAAU,SAAS,0EAA0E,aAAa,mBAAmB,YAAY,WAAW,2BAA2B,gBAAgB,eAAe,kBAAkB,OAAO,QAAQ,8EAA8E,SAAS,UAAU,mBAAmB,kBAAkB,gGAAgG,YAAY,mCAAmC,aAAa,sBAAsB,WAAW,sBAAsB,gBAAgB,qCAAqC,SAAS,UAAU,mBAAmB,kBAAkB,yCAAyC,aAAa,qCAAqC,MAAM,qCAAqC,SAAS,gCAAgC,mBAAmB,0CAA0C,gBAAgB,kBAAkB,sCAAsC,aAAa;AAChxC,iBAAiB;AACjB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,0BAA0B;AACpG,MAAM;AACN;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,qCAAqC,qEAAuB;AAC5D,mCAAmC,+DAAiB;AACpD,iBAAiB;AACjB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,kBAAkB,OAAO,6DAAe,SAAS,8DAAO,GAAG,oBAAoB,IAAI;AACnF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2BAA2B;AAC3B,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2BAA2B;AAC3B,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2BAA2B;AAC3B,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0BAA0B,EAAE;AACtD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,sDAAQ;AAC1D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzaAAa;AACvE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAmB,EAAE;AAC/C;AACA,gDAAgD,kFAAoB;AACpE,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,qBAAqB,EAAE;AACjD,+BAA+B,kDAAkD,EAAE;AACnF;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,wBAAwB,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,oDAAoD,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB,qCAAqC,qEAAuB;AAC5D,mCAAmC,+DAAiB;AACpD,6CAA6C,cAAc,kBAAkB,eAAe,cAAc,kBAAkB,gBAAgB,2BAA2B,MAAM,OAAO,QAAQ,SAAS,kBAAkB,aAAa,mBAAmB,uBAAuB,YAAY,UAAU,SAAS,0EAA0E,aAAa,mBAAmB,YAAY,WAAW,2BAA2B,gBAAgB,eAAe,kBAAkB,OAAO,QAAQ,8EAA8E,SAAS,UAAU,mBAAmB,kBAAkB,gGAAgG,YAAY,mCAAmC,aAAa,sBAAsB,WAAW,sBAAsB,gBAAgB,qCAAqC,SAAS,UAAU,mBAAmB,kBAAkB,yCAAyC,aAAa,qCAAqC,MAAM,qCAAqC,SAAS,gCAAgC,mBAAmB,0CAA0C,gBAAgB,kBAAkB,sCAAsC,aAAa;AAChxC,iBAAiB;AACjB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC/D,MAAM;AACN;AACA,kBAAkB,OAAO,6DAAe,uBAAuB,oBAAoB,IAAI;AACvF,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,oEAAa,EAAE,sEAAe;AAC5D;AACA;AACA;AACA;AACA,wBAAwB,oEAAa;AACrC,wBAAwB,sEAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6Q;AAC7Q;;;;;;;;;;;;;ACnuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8E;AACrB;AAC2D;AAC3D;AAC6R;AACnK;AACtG;AACjC;AAC8B;AACvB;AAC8B;AACL;AACQ;AAC7B;AAC2B;AACF;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4DAAc;AAChD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,KAAK,EAAE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,4CAA4C;AAC5C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,gCAAgC,OAAO,oDAAM,oCAAoC,GAAG;AAC7F,SAAS,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACzG,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU,8BAA8B;AACjE;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,yDAAW;AAC3B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC,CAAC,6DAAS;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,uBAAuB,4EAAa;AACpC;AACA;AACA;AACA;AACA,wBAAwB,4DAAc;AACtC;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAc;AAChD;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,qCAAqC,qEAAuB;AAC5D,mCAAmC,+DAAiB;AACpD;AACA,iBAAiB;AACjB;AACA;AACA,yCAAyC;AACzC,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,0BAA0B;AACpG,MAAM;AACN;AACA,yBAAyB,OAAO,0DAAY,wBAAwB;AACpE,4BAA4B,OAAO,0DAAY,yBAAyB,OAAO,yDAAW,gBAAgB,IAAI;AAC9G,4BAA4B,OAAO,uDAAS,SAAS,yDAAW,GAAG,eAAe,IAAI;AACtF,qBAAqB,OAAO,mDAAK,oBAAoB;AACrD,qBAAqB,OAAO,mDAAK,yBAAyB;AAC1D,0BAA0B,OAAO,mDAAK,8BAA8B;AACpE;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oEAAO;AACzB;AACA,QAAQ,kEAAK,0DAA0D,kEAAK,EAAE,oBAAoB;AAClG;AACA;AACA;AACA;AACA,QAAQ,kEAAK,SAAS,kEAAK,EAAE,0DAA0D;AACvF,QAAQ,kEAAK,UAAU,kEAAK,EAAE,yDAAyD;AACvF,QAAQ,uEAAU,2DAA2D,oEAAO,IAAI,mBAAmB;AAC3G,QAAQ,uEAAU;AAClB,YAAY,kEAAK,EAAE,wCAAwC;AAC3D,YAAY,oEAAO,IAAI,mBAAmB;AAC1C;AACA,QAAQ,uEAAU;AAClB,YAAY,kEAAK,EAAE,uCAAuC;AAC1D,YAAY,oEAAO,IAAI,mBAAmB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAY;AAC1C;AACA,4BAA4B,iDAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,sEAAwB,EAAE;AAC1C,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,iCAAiC,OAAO,oDAAM,SAAS,gEAAU,cAAc,mBAAmB,EAAE,KAAK,GAAG;AACrH,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3E,MAAM;AACN;AACA,CAAC,CAAC,mEAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAY;AAClD;AACA,yCAAyC,4CAAO;AAChD;AACA,gCAAgC,0DAAY;AAC5C;AACA,oCAAoC,0DAAY;AAChD;AACA,uCAAuC,0DAAY;AACnD;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wCAAwC,4EAAoB;AAC5D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kCAAkC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,wBAAwB,OAAO,oDAAM,EAAE;AACvC,4BAA4B,OAAO,oDAAM,EAAE;AAC3C,+BAA+B,OAAO,oDAAM,EAAE;AAC9C,uBAAuB,OAAO,oDAAM,EAAE;AACtC,oBAAoB,OAAO,mDAAK,sBAAsB;AACtD,kBAAkB,OAAO,mDAAK,EAAE;AAChC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qGAAqG,8CAA8C,qCAAqC,QAAQ;AAChM,mCAAmC,+DAAiB;AACpD;AACA,qCAAqC,qEAAuB;AAC5D;AACA;AACA;AACA,qBAAqB;AACrB,oDAAoD,YAAY,cAAc,oDAAoD,gBAAgB;AAClJ,iBAAiB;AACjB;AACA;AACA,6CAA6C;AAC7C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,uBAAuB,OAAO,uDAAS,SAAS,uEAAmB,IAAI;AACvE;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,4BAA4B,yEAAU,CAAC,iFAAkB;AACzD;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAS;AACnC;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAY;AAC9C;AACA,sCAAsC,iDAAY;AAClD;AACA;AACA;AACA;AACA;AACA,wCAAwC,0DAAY;AACpD;AACA,gCAAgC,0DAAY;AAC5C;AACA,kCAAkC,0DAAY;AAC9C;AACA,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B,EAAE;AACxD,+BAA+B,uBAAuB,oFAAqB,QAAQ,EAAE;AACrF;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,4BAA4B,EAAE;AACxD;AACA,kCAAkC,mFAAoB;AACtD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,gCAAgC,EAAE;AAC5D;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,8BAA8B,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,+CAA+C,EAAE;AAC5G;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0CAAK,eAAe,sDAAQ,gCAAgC,0BAA0B,EAAE,2BAA2B,gDAAgD,EAAE;AAC1M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,gCAAgC,OAAO,oDAAM,4BAA4B,GAAG,OAAO,sDAAQ,EAAE,GAAG;AACzG,SAAS,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACzG,MAAM;AACN;AACA,yBAAyB,OAAO,mDAAK,EAAE;AACvC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,2BAA2B,OAAO,mDAAK,EAAE;AACzC,+BAA+B,OAAO,oDAAM,EAAE;AAC9C,uBAAuB,OAAO,oDAAM,EAAE;AACtC,yBAAyB,OAAO,oDAAM,EAAE;AACxC,6BAA6B,OAAO,oDAAM,EAAE;AAC5C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,+eAA+e,8gCAA8gC,eAAe,8QAA8Q;AAC1xD,mCAAmC,+DAAiB;AACpD;AACA,qCAAqC,qEAAuB;AAC5D;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,6CAA6C,aAAa,sBAAsB,6CAA6C,8BAA8B,eAAe,YAAY,eAAe,eAAe,sBAAsB,WAAW,gBAAgB,kBAAkB,oBAAoB,uBAAuB,mBAAmB,mBAAmB,kBAAkB,qBAAqB,aAAa,4CAA4C,UAAU,+CAA+C,mBAAmB,oBAAoB,gCAAgC,eAAe,0DAA0D,WAAW,sCAAsC,oBAAoB,uBAAuB,mBAAmB,mBAAmB,yCAAyC,UAAU,yBAAyB,eAAe,gBAAgB,yBAAyB,eAAe,gBAAgB,gEAAgE,aAAa,YAAY,sBAAsB,kBAAkB,gBAAgB,aAAa,uDAAuD,8CAA8C,gBAAgB,eAAe,cAAc,MAAM,OAAO,QAAQ,SAAS,kBAAkB,cAAc,gBAAgB,gBAAgB,kCAAkC,kBAAkB,kBAAkB,gBAAgB,UAAU,YAAY,8EAA8E,kBAAkB;AAChhD,iBAAiB;AACjB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,gCAAgC,OAAO,oDAAM,4BAA4B,GAAG,OAAO,sDAAQ,EAAE,GAAG;AACzG,SAAS,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACzG,MAAM;AACN;AACA,oBAAoB,OAAO,6DAAe,kBAAkB,oBAAoB,IAAI;AACpF,2BAA2B,OAAO,uDAAS,6BAA6B;AACxE,sBAAsB,OAAO,uDAAS,wBAAwB;AAC9D;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mCAAmC,4EAAa;AAChD;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8FAA+B,EAAE,gBAAgB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA,YAAY,sDAAS;AACrB,sBAAsB,iEAAS;AAC/B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,0BAA0B,4BAA4B,EAAE;AACxD;AACA,oBAAoB,mFAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,sDAAS;AACjB,kBAAkB,iEAAS;AAC3B;AACA;AACA,SAAS;AACT,QAAQ,sDAAS;AACjB,kBAAkB,iEAAS;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uDAAuD,+CAAE;AACzD;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAK,8CAA8C,iEAAS;AACpE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,iEAAS;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6EAAc;AAC1B;AACA;AACA;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA;AACA,iBAAiB,0DAAG;AACpB;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB,iBAAiB,4DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6BAA6B,EAAE;AACzD;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAK;AACb;AACA,kBAAkB,iEAAS,CAAC,kDAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,wDAAwD;AACxD,SAAS,OA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AAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACzG,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,sEAAe;AACvC,wBAAwB,gEAAY;AACpC,wBAAwB,sEAAe;AACvC,wBAAwB,sEAAe;AACvC,wBAAwB,4DAAU;AAClC;AACA;AACA;AACA,wBAAwB,sEAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEsf;AACtf;;;;;;;;;;;;AC5zDA;AACA,CAAC,KAA4D,oBAAoB,mBAAO,CAAC,iEAAe,GAAG,mBAAO,CAAC,uEAAiB;AACpI,CAAC,SACyE;AAC1E,CAAC,wCAAwC;;AAEzC;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yFAAyF,uGAAuG,iBAAiB,KAAK,cAAc,KAAK,WAAW,OAAO,wCAAwC,0GAA0G,oCAAoC,cAAc,eAAe,aAAa,8DAA8D,SAAS,wFAAwF,yFAAyF,cAAc,mEAAmE,QAAQ,0DAA0D,qBAAqB,MAAM,MAAM,yGAAyG,cAAc,gHAAgH,cAAc;AAC5nC,2CAA2C,gBAAgB,uBAAuB,gCAAgC,4BAA4B,+BAA+B,iBAAiB,EAAE,MAAM,kBAAkB,iBAAiB,EAAE,kBAAkB,uBAAuB,EAAE,oBAAoB,iBAAiB,EAAE,YAAY,qBAAqB,kBAAkB,yBAAyB,aAAa,uBAAuB,cAAc,EAAE,sBAAsB,sBAAsB,EAAE,sBAAsB,2BAA2B,EAAE;AAC9hB,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,uBAAuB,mBAAmB;AAC1C,sBAAsB,mBAAmB;AACzC,kBAAkB,mBAAmB;AACrC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;;AAEA,8CAA8C,cAAc;;AAE5D,CAAC;;;;;;;;;;;;;ACpHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AACmE;AACpG;;AAEnD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,8BAA8B,0DAAY;AAC1C,2BAA2B,0DAAY;AACvC,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,wEAAgB;AAC5B;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,kCAAkC,wBAAwB,EAAE;AAC5D;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,qCAAqC,6BAA6B;AAClE,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4CAA4C,yDAAyD;AACrG;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,6CAA6C,+EAA+E;AAC5H;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,2CAA2C,qDAAqD;AAChG,iBAAiB;AACjB,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,wCAAwC,6BAA6B;AACrE;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,mDAAmD;AACnD;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB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","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { __spread, __extends } from 'tslib';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nvar MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatGridTile = /** @class */ (function () {\n    function MatGridTile(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    Object.defineProperty(MatGridTile.prototype, \"rowspan\", {\n        /** Amount of rows that the grid tile takes up. */\n        get: function () { return this._rowspan; },\n        set: function (value) { this._rowspan = Math.round(coerceNumberProperty(value)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatGridTile.prototype, \"colspan\", {\n        /** Amount of columns that the grid tile takes up. */\n        get: function () { return this._colspan; },\n        set: function (value) { this._colspan = Math.round(coerceNumberProperty(value)); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    MatGridTile.prototype._setStyle = function (property, value) {\n        this._element.nativeElement.style[property] = value;\n    };\n    MatGridTile.decorators = [\n        { type: Component, args: [{\n                    selector: 'mat-grid-tile',\n                    exportAs: 'matGridTile',\n                    host: {\n                        'class': 'mat-grid-tile',\n                        // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                        // the DOM. This is needed for the grid-tile harness.\n                        '[attr.rowspan]': 'rowspan',\n                        '[attr.colspan]': 'colspan'\n                    },\n                    template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatGridTile.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n    ]; };\n    MatGridTile.propDecorators = {\n        rowspan: [{ type: Input }],\n        colspan: [{ type: Input }]\n    };\n    return MatGridTile;\n}());\nvar MatGridTileText = /** @class */ (function () {\n    function MatGridTileText(_element) {\n        this._element = _element;\n    }\n    MatGridTileText.prototype.ngAfterContentInit = function () {\n        setLines(this._lines, this._element);\n    };\n    MatGridTileText.decorators = [\n        { type: Component, args: [{\n                    selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                    template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }] }\n    ];\n    /** @nocollapse */\n    MatGridTileText.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    MatGridTileText.propDecorators = {\n        _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n    };\n    return MatGridTileText;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nvar MatGridAvatarCssMatStyler = /** @class */ (function () {\n    function MatGridAvatarCssMatStyler() {\n    }\n    MatGridAvatarCssMatStyler.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-grid-avatar], [matGridAvatar]',\n                    host: { 'class': 'mat-grid-avatar' }\n                },] }\n    ];\n    return MatGridAvatarCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nvar MatGridTileHeaderCssMatStyler = /** @class */ (function () {\n    function MatGridTileHeaderCssMatStyler() {\n    }\n    MatGridTileHeaderCssMatStyler.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-grid-tile-header',\n                    host: { 'class': 'mat-grid-tile-header' }\n                },] }\n    ];\n    return MatGridTileHeaderCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nvar MatGridTileFooterCssMatStyler = /** @class */ (function () {\n    function MatGridTileFooterCssMatStyler() {\n    }\n    MatGridTileFooterCssMatStyler.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-grid-tile-footer',\n                    host: { 'class': 'mat-grid-tile-footer' }\n                },] }\n    ];\n    return MatGridTileFooterCssMatStyler;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nvar TileCoordinator = /** @class */ (function () {\n    function TileCoordinator() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    Object.defineProperty(TileCoordinator.prototype, \"rowCount\", {\n        /** Gets the total number of rows occupied by tiles */\n        get: function () { return this.rowIndex + 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TileCoordinator.prototype, \"rowspan\", {\n        /**\n         * Gets the total span of rows occupied by tiles.\n         * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n         */\n        get: function () {\n            var lastRowMax = Math.max.apply(Math, __spread(this.tracker));\n            // if any of the tiles has a rowspan that pushes it beyond the total row count,\n            // add the difference to the rowcount\n            return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    TileCoordinator.prototype.update = function (numColumns, tiles) {\n        var _this = this;\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(function (tile) { return _this._trackTile(tile); });\n    };\n    /** Calculates the row and col position of a tile. */\n    TileCoordinator.prototype._trackTile = function (tile) {\n        // Find a gap large enough for this tile.\n        var gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    };\n    /** Finds the next available space large enough to fit the tile. */\n    TileCoordinator.prototype._findMatchingGap = function (tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(\"mat-grid-list: tile with colspan \" + tileCols + \" is wider than \" +\n                (\"grid with cols=\\\"\" + this.tracker.length + \"\\\".\"));\n        }\n        // Start index is inclusive, end index is exclusive.\n        var gapStartIndex = -1;\n        var gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    };\n    /** Move \"down\" to the next row. */\n    TileCoordinator.prototype._nextRow = function () {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (var i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    };\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    TileCoordinator.prototype._findGapEndIndex = function (gapStartIndex) {\n        for (var i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    };\n    /** Update the tile tracker to account for the given tile in the given space. */\n    TileCoordinator.prototype._markTilePosition = function (start, tile) {\n        for (var i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    };\n    return TileCoordinator;\n}());\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nvar TilePosition = /** @class */ (function () {\n    function TilePosition(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n    return TilePosition;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nvar cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nvar TileStyler = /** @class */ (function () {\n    function TileStyler() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    TileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    };\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    TileStyler.prototype.getBaseTileSize = function (sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return \"(\" + sizePercent + \"% - (\" + this._gutterSize + \" * \" + gutterFraction + \"))\";\n    };\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTilePosition = function (baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(\"(\" + baseSize + \" + \" + this._gutterSize + \") * \" + offset);\n    };\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTileSize = function (baseSize, span) {\n        return \"(\" + baseSize + \" * \" + span + \") + (\" + (span - 1) + \" * \" + this._gutterSize + \")\";\n    };\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    TileStyler.prototype.setStyle = function (tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        var percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        var gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    };\n    /** Sets the horizontal placement of the tile in the list. */\n    TileStyler.prototype.setColStyles = function (tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        var baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        var side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    };\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    TileStyler.prototype.getGutterSpan = function () {\n        return this._gutterSize + \" * (\" + this._rowspan + \" - 1)\";\n    };\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    TileStyler.prototype.getTileSpan = function (tileHeight) {\n        return this._rowspan + \" * \" + this.getTileSize(tileHeight, 1);\n    };\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    TileStyler.prototype.getComputedHeight = function () { return null; };\n    return TileStyler;\n}());\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nvar FixedTileStyler = /** @class */ (function (_super) {\n    __extends(FixedTileStyler, _super);\n    function FixedTileStyler(fixedRowHeight) {\n        var _this = _super.call(this) || this;\n        _this.fixedRowHeight = fixedRowHeight;\n        return _this;\n    }\n    FixedTileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {\n        _super.prototype.init.call(this, gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(\"Invalid value \\\"\" + this.fixedRowHeight + \"\\\" set as rowHeight.\");\n        }\n    };\n    FixedTileStyler.prototype.setRowStyles = function (tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    };\n    FixedTileStyler.prototype.getComputedHeight = function () {\n        return [\n            'height', calc(this.getTileSpan(this.fixedRowHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    FixedTileStyler.prototype.reset = function (list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(function (tile) {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    };\n    return FixedTileStyler;\n}(TileStyler));\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nvar RatioTileStyler = /** @class */ (function (_super) {\n    __extends(RatioTileStyler, _super);\n    function RatioTileStyler(value) {\n        var _this = _super.call(this) || this;\n        _this._parseRatio(value);\n        return _this;\n    }\n    RatioTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        var percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    };\n    RatioTileStyler.prototype.getComputedHeight = function () {\n        return [\n            'paddingBottom', calc(this.getTileSpan(this.baseTileHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    RatioTileStyler.prototype.reset = function (list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(function (tile) {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    };\n    RatioTileStyler.prototype._parseRatio = function (value) {\n        var ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(\"mat-grid-list: invalid ratio given for row-height: \\\"\" + value + \"\\\"\");\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    };\n    return RatioTileStyler;\n}(TileStyler));\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nvar FitTileStyler = /** @class */ (function (_super) {\n    __extends(FitTileStyler, _super);\n    function FitTileStyler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FitTileStyler.prototype.setRowStyles = function (tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        var percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        var gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        var baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    };\n    FitTileStyler.prototype.reset = function (list) {\n        if (list._tiles) {\n            list._tiles.forEach(function (tile) {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    };\n    return FitTileStyler;\n}(TileStyler));\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return \"calc(\" + exp + \")\";\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : value + \"px\";\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nvar MAT_FIT_MODE = 'fit';\nvar MatGridList = /** @class */ (function () {\n    function MatGridList(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n        this._gutter = '1px';\n    }\n    Object.defineProperty(MatGridList.prototype, \"cols\", {\n        /** Amount of columns in the grid list. */\n        get: function () { return this._cols; },\n        set: function (value) {\n            this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatGridList.prototype, \"gutterSize\", {\n        /** Size of the grid list's gutter in pixels. */\n        get: function () { return this._gutter; },\n        set: function (value) { this._gutter = \"\" + (value == null ? '' : value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatGridList.prototype, \"rowHeight\", {\n        /** Set internal representation of row height from the user-provided value. */\n        get: function () { return this._rowHeight; },\n        set: function (value) {\n            var newValue = \"\" + (value == null ? '' : value);\n            if (newValue !== this._rowHeight) {\n                this._rowHeight = newValue;\n                this._setTileStyler(this._rowHeight);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatGridList.prototype.ngOnInit = function () {\n        this._checkCols();\n        this._checkRowHeight();\n    };\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    MatGridList.prototype.ngAfterContentChecked = function () {\n        this._layoutTiles();\n    };\n    /** Throw a friendly error if cols property is missing */\n    MatGridList.prototype._checkCols = function () {\n        if (!this.cols) {\n            throw Error(\"mat-grid-list: must pass in number of columns. \" +\n                \"Example: <mat-grid-list cols=\\\"3\\\">\");\n        }\n    };\n    /** Default to equal width:height if rowHeight property is missing */\n    MatGridList.prototype._checkRowHeight = function () {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    };\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    MatGridList.prototype._setTileStyler = function (rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    };\n    /** Computes and applies the size and position for all children grid tiles. */\n    MatGridList.prototype._layoutTiles = function () {\n        var _this = this;\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        var tracker = this._tileCoordinator;\n        var tiles = this._tiles.filter(function (tile) { return !tile._gridList || tile._gridList === _this; });\n        var direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach(function (tile, index) {\n            var pos = tracker.positions[index];\n            _this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    };\n    /** Sets style on the main grid-list element, given the style name and value. */\n    MatGridList.prototype._setListStyle = function (style) {\n        if (style) {\n            this._element.nativeElement.style[style[0]] = style[1];\n        }\n    };\n    MatGridList.decorators = [\n        { type: Component, args: [{\n                    selector: 'mat-grid-list',\n                    exportAs: 'matGridList',\n                    template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                    host: {\n                        'class': 'mat-grid-list',\n                        // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                        // needed for the grid-list harness.\n                        '[attr.cols]': 'cols',\n                    },\n                    providers: [{\n                            provide: MAT_GRID_LIST,\n                            useExisting: MatGridList\n                        }],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatGridList.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    MatGridList.propDecorators = {\n        _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n        cols: [{ type: Input }],\n        gutterSize: [{ type: Input }],\n        rowHeight: [{ type: Input }]\n    };\n    return MatGridList;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatGridListModule = /** @class */ (function () {\n    function MatGridListModule() {\n    }\n    MatGridListModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatLineModule, MatCommonModule],\n                    exports: [\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler\n                    ],\n                    declarations: [\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler\n                    ],\n                },] }\n    ];\n    return MatGridListModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n//# sourceMappingURL=grid-list.js.map\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { __extends, __spread } from 'tslib';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nvar _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    var method = function (element) { return ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }); };\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nvar MatInkBar = /** @class */ (function () {\n    function MatInkBar(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    MatInkBar.prototype.alignToElement = function (element) {\n        var _this = this;\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () { return _this._setStyles(element); });\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    };\n    /** Shows the ink bar. */\n    MatInkBar.prototype.show = function () {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    };\n    /** Hides the ink bar. */\n    MatInkBar.prototype.hide = function () {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    };\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    MatInkBar.prototype._setStyles = function (element) {\n        var positions = this._inkBarPositioner(element);\n        var inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    };\n    MatInkBar.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': \"_animationMode === 'NoopAnimations'\",\n                    },\n                },] }\n    ];\n    /** @nocollapse */\n    MatInkBar.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    return MatInkBar;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Decorates the `ng-template` tags and reads out the template from it. */\nvar MatTabContent = /** @class */ (function () {\n    function MatTabContent(template) {\n        this.template = template;\n    }\n    MatTabContent.decorators = [\n        { type: Directive, args: [{ selector: '[matTabContent]' },] }\n    ];\n    /** @nocollapse */\n    MatTabContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return MatTabContent;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to flag tab labels for use with the portal directive */\nvar MatTabLabel = /** @class */ (function (_super) {\n    __extends(MatTabLabel, _super);\n    function MatTabLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatTabLabel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                },] }\n    ];\n    return MatTabLabel;\n}(CdkPortal));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nvar MatTabBase = /** @class */ (function () {\n    function MatTabBase() {\n    }\n    return MatTabBase;\n}());\nvar _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nvar MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nvar MatTab = /** @class */ (function (_super) {\n    __extends(MatTab, _super);\n    function MatTab(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        var _this = _super.call(this) || this;\n        _this._viewContainerRef = _viewContainerRef;\n        _this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        _this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        _this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        _this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        _this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        _this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        _this.isActive = false;\n        return _this;\n    }\n    Object.defineProperty(MatTab.prototype, \"templateLabel\", {\n        /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n        get: function () { return this._templateLabel; },\n        set: function (value) {\n            // Only update the templateLabel via query if there is actually\n            // a MatTabLabel found. This works around an issue where a user may have\n            // manually set `templateLabel` during creation mode, which would then get clobbered\n            // by `undefined` when this query resolves.\n            if (value) {\n                this._templateLabel = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTab.prototype, \"content\", {\n        /** @docs-private */\n        get: function () {\n            return this._contentPortal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatTab.prototype.ngOnChanges = function (changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    };\n    MatTab.prototype.ngOnDestroy = function () {\n        this._stateChanges.complete();\n    };\n    MatTab.prototype.ngOnInit = function () {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    };\n    MatTab.decorators = [\n        { type: Component, args: [{\n                    selector: 'mat-tab',\n                    template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                    inputs: ['disabled'],\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matTab'\n                }] }\n    ];\n    /** @nocollapse */\n    MatTab.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n    ]; };\n    MatTab.propDecorators = {\n        templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n        _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n        _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n        textLabel: [{ type: Input, args: ['label',] }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n    };\n    return MatTab;\n}(_MatTabMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nvar matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nvar MatTabBodyPortal = /** @class */ (function (_super) {\n    __extends(MatTabBodyPortal, _super);\n    function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        var _this = _super.call(this, componentFactoryResolver, viewContainerRef, _document) || this;\n        _this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        _this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        _this._leavingSub = Subscription.EMPTY;\n        return _this;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    MatTabBodyPortal.prototype.ngOnInit = function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe(function (isCentering) {\n            if (isCentering && !_this.hasAttached()) {\n                _this.attach(_this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(function () {\n            _this.detach();\n        });\n    };\n    /** Clean up centering subscription. */\n    MatTabBodyPortal.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    };\n    MatTabBodyPortal.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabBodyHost]'\n                },] }\n    ];\n    /** @nocollapse */\n    MatTabBodyPortal.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(function () { return MatTabBody; }),] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    return MatTabBodyPortal;\n}(CdkPortalOutlet));\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nvar _MatTabBodyBase = /** @class */ (function () {\n    function _MatTabBodyBase(_elementRef, _dir, changeDetectorRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe(function (dir) {\n                _this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged(function (x, y) {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(function (event) {\n            // If the transition to the center is complete, emit an event.\n            if (_this._isCenterPosition(event.toState) && _this._isCenterPosition(_this._position)) {\n                _this._onCentered.emit();\n            }\n            if (_this._isCenterPosition(event.fromState) && !_this._isCenterPosition(_this._position)) {\n                _this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    Object.defineProperty(_MatTabBodyBase.prototype, \"position\", {\n        /** The shifted index position of the tab body, where zero represents the active center tab. */\n        set: function (position) {\n            this._positionIndex = position;\n            this._computePositionAnimationState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    _MatTabBodyBase.prototype.ngOnInit = function () {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    };\n    _MatTabBodyBase.prototype.ngOnDestroy = function () {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    };\n    _MatTabBodyBase.prototype._onTranslateTabStarted = function (event) {\n        var isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /** The text direction of the containing app. */\n    _MatTabBodyBase.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _MatTabBodyBase.prototype._isCenterPosition = function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _MatTabBodyBase.prototype._computePositionAnimationState = function (dir) {\n        if (dir === void 0) { dir = this._getLayoutDirection(); }\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    };\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _MatTabBodyBase.prototype._computePositionFromOrigin = function (origin) {\n        var dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    };\n    _MatTabBodyBase.decorators = [\n        { type: Directive }\n    ];\n    /** @nocollapse */\n    _MatTabBodyBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    _MatTabBodyBase.propDecorators = {\n        _onCentering: [{ type: Output }],\n        _beforeCentering: [{ type: Output }],\n        _afterLeavingCenter: [{ type: Output }],\n        _onCentered: [{ type: Output }],\n        _content: [{ type: Input, args: ['content',] }],\n        origin: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        position: [{ type: Input }]\n    };\n    return _MatTabBodyBase;\n}());\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nvar MatTabBody = /** @class */ (function (_super) {\n    __extends(MatTabBody, _super);\n    function MatTabBody(elementRef, dir, changeDetectorRef) {\n        return _super.call(this, elementRef, dir, changeDetectorRef) || this;\n    }\n    MatTabBody.decorators = [\n        { type: Component, args: [{\n                    selector: 'mat-tab-body',\n                    template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                    encapsulation: ViewEncapsulation.None,\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    animations: [matTabsAnimations.translateTab],\n                    host: {\n                        'class': 'mat-tab-body',\n                    },\n                    styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatTabBody.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    MatTabBody.propDecorators = {\n        _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n    };\n    return MatTabBody;\n}(_MatTabBodyBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nvar MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nvar nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nvar MatTabChangeEvent = /** @class */ (function () {\n    function MatTabChangeEvent() {\n    }\n    return MatTabChangeEvent;\n}());\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nvar MatTabGroupMixinBase = /** @class */ (function () {\n    function MatTabGroupMixinBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabGroupMixinBase;\n}());\nvar _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nvar _MatTabGroupBase = /** @class */ (function (_super) {\n    __extends(_MatTabGroupBase, _super);\n    function _MatTabGroupBase(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        _this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        _this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        _this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        _this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        _this._tabLabelSubscription = Subscription.EMPTY;\n        _this._dynamicHeight = false;\n        _this._selectedIndex = null;\n        /** Position of the tab header. */\n        _this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        _this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        _this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        _this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        _this.selectedTabChange = new EventEmitter(true);\n        _this._groupId = nextId++;\n        _this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        _this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        return _this;\n    }\n    Object.defineProperty(_MatTabGroupBase.prototype, \"dynamicHeight\", {\n        /** Whether the tab group should grow to the size of the active tab. */\n        get: function () { return this._dynamicHeight; },\n        set: function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabGroupBase.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: function () { return this._selectedIndex; },\n        set: function (value) {\n            this._indexToSelect = coerceNumberProperty(value, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabGroupBase.prototype, \"animationDuration\", {\n        /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n        get: function () { return this._animationDuration; },\n        set: function (value) {\n            this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabGroupBase.prototype, \"backgroundColor\", {\n        /** Background color of the tab group. */\n        get: function () { return this._backgroundColor; },\n        set: function (value) {\n            var nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    _MatTabGroupBase.prototype.ngAfterContentChecked = function () {\n        var _this = this;\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            var isFirstRun_1 = this._selectedIndex == null;\n            if (!isFirstRun_1) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(function () {\n                _this._tabs.forEach(function (tab, index) { return tab.isActive = index === indexToSelect; });\n                if (!isFirstRun_1) {\n                    _this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach(function (tab, index) {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - _this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    _MatTabGroupBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(function () {\n            var indexToSelect = _this._clampTabIndex(_this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === _this._selectedIndex) {\n                var tabs = _this._tabs.toArray();\n                for (var i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        _this._indexToSelect = _this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /** Listens to changes in all of the tabs. */\n    _MatTabGroupBase.prototype._subscribeToAllTabChanges = function () {\n        var _this = this;\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe(function (tabs) {\n            _this._tabs.reset(tabs.filter(function (tab) {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === _this;\n            }));\n            _this._tabs.notifyOnChanges();\n        });\n    };\n    _MatTabGroupBase.prototype.ngOnDestroy = function () {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    };\n    /** Re-aligns the ink bar to the selected tab element. */\n    _MatTabGroupBase.prototype.realignInkBar = function () {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    };\n    _MatTabGroupBase.prototype._focusChanged = function (index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    };\n    _MatTabGroupBase.prototype._createChangeEvent = function (index) {\n        var event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _MatTabGroupBase.prototype._subscribeToTabLabels = function () {\n        var _this = this;\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge.apply(void 0, __spread(this._tabs.map(function (tab) { return tab._stateChanges; }))).subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n    };\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _MatTabGroupBase.prototype._clampTabIndex = function (index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    };\n    /** Returns a unique id for each tab label element */\n    _MatTabGroupBase.prototype._getTabLabelId = function (i) {\n        return \"mat-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns a unique id for each tab content element */\n    _MatTabGroupBase.prototype._getTabContentId = function (i) {\n        return \"mat-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _MatTabGroupBase.prototype._setTabBodyWrapperHeight = function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    };\n    /** Removes the height of the tab body wrapper. */\n    _MatTabGroupBase.prototype._removeTabBodyWrapperHeight = function () {\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    };\n    /** Handle click events, setting new selected index if appropriate. */\n    _MatTabGroupBase.prototype._handleClick = function (tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    };\n    /** Retrieves the tabindex for the tab. */\n    _MatTabGroupBase.prototype._getTabIndex = function (tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    };\n    _MatTabGroupBase.decorators = [\n        { type: Directive }\n    ];\n    /** @nocollapse */\n    _MatTabGroupBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabGroupBase.propDecorators = {\n        dynamicHeight: [{ type: Input }],\n        selectedIndex: [{ type: Input }],\n        headerPosition: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        disablePagination: [{ type: Input }],\n        backgroundColor: [{ type: Input }],\n        selectedIndexChange: [{ type: Output }],\n        focusChange: [{ type: Output }],\n        animationDone: [{ type: Output }],\n        selectedTabChange: [{ type: Output }]\n    };\n    return _MatTabGroupBase;\n}(_MatTabGroupMixinBase));\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nvar MatTabGroup = /** @class */ (function (_super) {\n    __extends(MatTabGroup, _super);\n    function MatTabGroup(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        return _super.call(this, elementRef, changeDetectorRef, defaultConfig, animationMode) || this;\n    }\n    MatTabGroup.decorators = [\n        { type: Component, args: [{\n                    selector: 'mat-tab-group',\n                    exportAs: 'matTabGroup',\n                    template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                    encapsulation: ViewEncapsulation.None,\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    inputs: ['color', 'disableRipple'],\n                    providers: [{\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup\n                        }],\n                    host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    },\n                    styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatTabGroup.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabGroup.propDecorators = {\n        _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n        _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n        _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n    };\n    return MatTabGroup;\n}(_MatTabGroupBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nvar MatTabLabelWrapperBase = /** @class */ (function () {\n    function MatTabLabelWrapperBase() {\n    }\n    return MatTabLabelWrapperBase;\n}());\nvar _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nvar MatTabLabelWrapper = /** @class */ (function (_super) {\n    __extends(MatTabLabelWrapper, _super);\n    function MatTabLabelWrapper(elementRef) {\n        var _this = _super.call(this) || this;\n        _this.elementRef = elementRef;\n        return _this;\n    }\n    /** Sets focus on the wrapper element */\n    MatTabLabelWrapper.prototype.focus = function () {\n        this.elementRef.nativeElement.focus();\n    };\n    MatTabLabelWrapper.prototype.getOffsetLeft = function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    MatTabLabelWrapper.prototype.getOffsetWidth = function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    MatTabLabelWrapper.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    }\n                },] }\n    ];\n    /** @nocollapse */\n    MatTabLabelWrapper.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    return MatTabLabelWrapper;\n}(_MatTabLabelWrapperMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nvar passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nvar HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nvar HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nvar MatPaginatedTabHeader = /** @class */ (function () {\n    function MatPaginatedTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(function () {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(_this._destroyed))\n                .subscribe(function () {\n                _this._stopInterval();\n            });\n        });\n    }\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: function () { return this._selectedIndex; },\n        set: function (value) {\n            value = coerceNumberProperty(value);\n            if (this._selectedIndex != value) {\n                this._selectedIndexChanged = true;\n                this._selectedIndex = value;\n                if (this._keyManager) {\n                    this._keyManager.updateActiveItem(value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatPaginatedTabHeader.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () {\n            _this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () {\n            _this._handlePaginatorPress('after');\n        });\n    };\n    MatPaginatedTabHeader.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var dirChange = this._dir ? this._dir.change : of(null);\n        var resize = this._viewportRuler.change(150);\n        var realign = function () {\n            _this.updatePagination();\n            _this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(function () {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            _this._keyManager.withHorizontalOrientation(_this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(function (newFocusIndex) {\n            _this.indexFocused.emit(newFocusIndex);\n            _this._setTabFocus(newFocusIndex);\n        });\n    };\n    MatPaginatedTabHeader.prototype.ngAfterContentChecked = function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    MatPaginatedTabHeader.prototype.ngOnDestroy = function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    };\n    /** Handles keyboard events on the header. */\n    MatPaginatedTabHeader.prototype._handleKeydown = function (event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    MatPaginatedTabHeader.prototype._onContentChanges = function () {\n        var _this = this;\n        var textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(function () {\n                _this.updatePagination();\n                _this._alignInkBarToSelectedTab();\n                _this._changeDetectorRef.markForCheck();\n            });\n        }\n    };\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    MatPaginatedTabHeader.prototype.updatePagination = function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"focusIndex\", {\n        /** Tracks which element has focus; used for keyboard navigation */\n        get: function () {\n            return this._keyManager ? this._keyManager.activeItemIndex : 0;\n        },\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set: function (value) {\n            if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n                return;\n            }\n            this._keyManager.setActiveItem(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    MatPaginatedTabHeader.prototype._isValidIndex = function (index) {\n        if (!this._items) {\n            return true;\n        }\n        var tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    MatPaginatedTabHeader.prototype._setTabFocus = function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            var containerEl = this._tabListContainer.nativeElement;\n            var dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /** The layout direction of the containing app. */\n    MatPaginatedTabHeader.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    MatPaginatedTabHeader.prototype._updateTabScrollPosition = function () {\n        if (this.disablePagination) {\n            return;\n        }\n        var scrollDistance = this.scrollDistance;\n        var platform = this._platform;\n        var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = \"translateX(\" + Math.round(translateX) + \"px)\";\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    };\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"scrollDistance\", {\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        get: function () { return this._scrollDistance; },\n        set: function (value) {\n            this._scrollTo(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._scrollHeader = function (direction) {\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        var scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    };\n    /** Handles click events on the pagination arrows. */\n    MatPaginatedTabHeader.prototype._handlePaginatorClick = function (direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._scrollToLabel = function (labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        var selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        var _a = selectedLabel.elementRef.nativeElement, offsetLeft = _a.offsetLeft, offsetWidth = _a.offsetWidth;\n        var labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        var beforeVisiblePos = this.scrollDistance;\n        var afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._checkPaginationEnabled = function () {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._checkScrollingControls = function () {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._getMaxScrollDistance = function () {\n        var lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    };\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    MatPaginatedTabHeader.prototype._alignInkBarToSelectedTab = function () {\n        var selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        var selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    };\n    /** Stops the currently-running paginator interval.  */\n    MatPaginatedTabHeader.prototype._stopInterval = function () {\n        this._stopScrolling.next();\n    };\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    MatPaginatedTabHeader.prototype._handlePaginatorPress = function (direction, mouseEvent) {\n        var _this = this;\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(function () {\n            var _a = _this._scrollHeader(direction), maxScrollDistance = _a.maxScrollDistance, distance = _a.distance;\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                _this._stopInterval();\n            }\n        });\n    };\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    MatPaginatedTabHeader.prototype._scrollTo = function (position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        var maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance: maxScrollDistance, distance: this._scrollDistance };\n    };\n    MatPaginatedTabHeader.decorators = [\n        { type: Directive }\n    ];\n    /** @nocollapse */\n    MatPaginatedTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatPaginatedTabHeader.propDecorators = {\n        disablePagination: [{ type: Input }]\n    };\n    return MatPaginatedTabHeader;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nvar _MatTabHeaderBase = /** @class */ (function (_super) {\n    __extends(_MatTabHeaderBase, _super);\n    function _MatTabHeaderBase(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n        _this._disableRipple = false;\n        return _this;\n    }\n    Object.defineProperty(_MatTabHeaderBase.prototype, \"disableRipple\", {\n        /** Whether the ripple effect is disabled or not. */\n        get: function () { return this._disableRipple; },\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    _MatTabHeaderBase.prototype._itemSelected = function (event) {\n        event.preventDefault();\n    };\n    _MatTabHeaderBase.decorators = [\n        { type: Directive }\n    ];\n    /** @nocollapse */\n    _MatTabHeaderBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabHeaderBase.propDecorators = {\n        disableRipple: [{ type: Input }]\n    };\n    return _MatTabHeaderBase;\n}(MatPaginatedTabHeader));\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nvar MatTabHeader = /** @class */ (function (_super) {\n    __extends(MatTabHeader, _super);\n    function MatTabHeader(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        return _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n    }\n    MatTabHeader.decorators = [\n        { type: Component, args: [{\n                    selector: 'mat-tab-header',\n                    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                    inputs: ['selectedIndex'],\n                    outputs: ['selectFocusedIndex', 'indexFocused'],\n                    encapsulation: ViewEncapsulation.None,\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    },\n                    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabHeader.propDecorators = {\n        _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n    };\n    return MatTabHeader;\n}(_MatTabHeaderBase));\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nvar _MatTabNavBase = /** @class */ (function (_super) {\n    __extends(_MatTabNavBase, _super);\n    function _MatTabNavBase(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n        _this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        _this.color = 'primary';\n        return _this;\n    }\n    Object.defineProperty(_MatTabNavBase.prototype, \"backgroundColor\", {\n        /** Background color of the tab nav. */\n        get: function () { return this._backgroundColor; },\n        set: function (value) {\n            var classList = this._elementRef.nativeElement.classList;\n            classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabNavBase.prototype, \"disableRipple\", {\n        /** Whether the ripple effect is disabled or not. */\n        get: function () { return this._disableRipple; },\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    _MatTabNavBase.prototype._itemSelected = function () {\n        // noop\n    };\n    _MatTabNavBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(function () {\n            _this.updateActiveLink();\n        });\n        _super.prototype.ngAfterContentInit.call(this);\n    };\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    _MatTabNavBase.prototype.updateActiveLink = function (_element) {\n        if (!this._items) {\n            return;\n        }\n        var items = this._items.toArray();\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    };\n    _MatTabNavBase.decorators = [\n        { type: Directive }\n    ];\n    /** @nocollapse */\n    _MatTabNavBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabNavBase.propDecorators = {\n        backgroundColor: [{ type: Input }],\n        disableRipple: [{ type: Input }],\n        color: [{ type: Input }]\n    };\n    return _MatTabNavBase;\n}(MatPaginatedTabHeader));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MatTabNav = /** @class */ (function (_super) {\n    __extends(MatTabNav, _super);\n    function MatTabNav(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        return _super.call(this, elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) || this;\n    }\n    MatTabNav.decorators = [\n        { type: Component, args: [{\n                    selector: '[mat-tab-nav-bar]',\n                    exportAs: 'matTabNavBar, matTabNav',\n                    inputs: ['color'],\n                    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                    host: {\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatTabNav.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabNav.propDecorators = {\n        _items: [{ type: ContentChildren, args: [forwardRef(function () { return MatTabLink; }), { descendants: true },] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n    };\n    return MatTabNav;\n}(_MatTabNavBase));\n// Boilerplate for applying mixins to MatTabLink.\nvar MatTabLinkMixinBase = /** @class */ (function () {\n    function MatTabLinkMixinBase() {\n    }\n    return MatTabLinkMixinBase;\n}());\nvar _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nvar _MatTabLinkBase = /** @class */ (function (_super) {\n    __extends(_MatTabLinkBase, _super);\n    function _MatTabLinkBase(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        var _this = _super.call(this) || this;\n        _this._tabNavBar = _tabNavBar;\n        _this.elementRef = elementRef;\n        _this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        _this._isActive = false;\n        _this.rippleConfig = globalRippleOptions || {};\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            _this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n        return _this;\n    }\n    Object.defineProperty(_MatTabLinkBase.prototype, \"active\", {\n        /** Whether the link is active. */\n        get: function () { return this._isActive; },\n        set: function (value) {\n            if (value !== this._isActive) {\n                this._isActive = value;\n                this._tabNavBar.updateActiveLink(this.elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabLinkBase.prototype, \"rippleDisabled\", {\n        /**\n         * Whether ripples are disabled on interaction.\n         * @docs-private\n         */\n        get: function () {\n            return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n                !!this.rippleConfig.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _MatTabLinkBase.prototype.focus = function () {\n        this.elementRef.nativeElement.focus();\n    };\n    _MatTabLinkBase.prototype.ngOnDestroy = function () {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    };\n    _MatTabLinkBase.decorators = [\n        { type: Directive }\n    ];\n    /** @nocollapse */\n    _MatTabLinkBase.ctorParameters = function () { return [\n        { type: _MatTabNavBase },\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabLinkBase.propDecorators = {\n        active: [{ type: Input }]\n    };\n    return _MatTabLinkBase;\n}(_MatTabLinkMixinBase));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nvar MatTabLink = /** @class */ (function (_super) {\n    __extends(MatTabLink, _super);\n    function MatTabLink(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        var _this = _super.call(this, tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode) || this;\n        _this._tabLinkRipple = new RippleRenderer(_this, ngZone, elementRef, platform);\n        _this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n        return _this;\n    }\n    MatTabLink.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._tabLinkRipple._removeTriggerEvents();\n    };\n    MatTabLink.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-current]': 'active ? \"page\" : null',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.tabIndex]': 'tabIndex',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                    }\n                },] }\n    ];\n    /** @nocollapse */\n    MatTabLink.ctorParameters = function () { return [\n        { type: MatTabNav },\n        { type: ElementRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    return MatTabLink;\n}(_MatTabLinkBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatTabsModule = /** @class */ (function () {\n    function MatTabsModule() {\n    }\n    MatTabsModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                },] }\n    ];\n    return MatTabsModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n//# sourceMappingURL=tabs.js.map\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common'], factory) :\n\t(factory((global['text-show-more-less'] = {}),global.core,global.common));\n}(this, (function (exports,core,common) { 'use strict';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar TextShowLessComponent = (function () {\r\n    function TextShowLessComponent() {\r\n        this.showTail = false;\r\n        // @Input() textData;\r\n        this.data = '';\r\n        //data = 'Mufthi Mohammed Ali'\r\n        this.tempLength = 0;\r\n        this.readMore = false;\r\n        this.showMoreText = '+ Read More';\r\n        this.showLessText = '- Read Less';\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TextShowLessComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.tempLength = this.data.length;\r\n        this.maxLengthCloned = this.maxLength || 0;\r\n        this.data = this.data || '';\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    TextShowLessComponent.prototype.swap = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        // console.log('read more..readless fired'+ this.data.length);\r\n        // console.log('tempLength ' + this.tempLength);\r\n        // console.log('maxLengthCloned ' + this.maxLengthCloned);\r\n        // console.log('maxLength' + this.maxLength);\r\n        // this.tempLength =  this.data.length + this.maxLengthCloned;\r\n        // this.maxLengthCloned =  this.data.length - this.maxLengthCloned;\r\n        // this.tempLength =  this.data.length - this.maxLengthCloned;\r\n        if (this.maxLengthCloned === this.maxLength) {\r\n            this.maxLengthCloned = this.data.length;\r\n        }\r\n        else {\r\n            this.maxLengthCloned = this.maxLength;\r\n        }\r\n        // console.log('tempLength ' + this.tempLength);\r\n        // console.log('maxLengthCloned ' + this.maxLengthCloned);\r\n        // console.log('maxLength' + this.maxLength);\r\n        // this.readMore = data;\r\n    };\r\n    TextShowLessComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'crystal-text-show-less',\r\n                    template: \"<div class=\\\"text-show-less\\\" style=\\\"text-align: justify;\\\"> <div *ngIf=\\\"maxLength < data?.length\\\">   <div *ngIf=\\\"maxLengthCloned < data?.length\\\"  > <!-- {{maxLengthCloned}} - {{data?.length}} - {{maxLength}} --> {{ (data  | slice: 0:maxLength) + '...' }}  <div *ngIf=\\\"showTail\\\" class=\\\"custom-end d-inline-block custom-font-size\\\" style=\\\"position: relative;\\\" (click)=\\\"swap('show more')\\\"> {{showMoreText}} </div> <!-- {{data.length}} --> </div> <div *ngIf=\\\"maxLengthCloned >= data?.length\\\"> {{ data  }}  <div *ngIf=\\\"maxLengthCloned >= data?.length && showTail\\\" style=\\\"position: relative;\\\" class=\\\"custom-end d-inline-block custom-font-size\\\" (click)=\\\"swap('show less')\\\"> {{showLessText}}</div>  </div> </div> <div *ngIf=\\\"maxLength >= data?.length\\\"  >{{ data }}  </div> </div> <!-- <div class=\\\"truncate\\\" [ngClass]=\\\"{'truncated':readMore}\\\"> {{data}} <div *ngIf=\\\"!readMore\\\" class=\\\"custom-end d-inline-block custom-font-size\\\" (click)=\\\"swap(true)\\\"> {{showMoreText}} </div> <div *ngIf=\\\"readMore\\\" class=\\\"custom-end d-inline-block custom-font-size\\\" (click)=\\\"swap(false)\\\"> {{showLessText}} </div> </div> --> \",\r\n                    styles: [\".custom-end { color: #007bff; text-decoration: none; -ms-touch-action: manipulation; touch-action: manipulation; background-color: transparent; cursor: pointer; } div { line-height: 1.3; font-size: 13px; } .d-inline-block { display: inline-block; } .custom-font-size { font-size: 12px; } .truncate { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; float: left; word-wrap: break-word; width: 300px; } .truncate.truncated { white-space: initial; } .form-control:focus { border-color: transparent; } \"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TextShowLessComponent.ctorParameters = function () { return []; };\r\n    TextShowLessComponent.propDecorators = {\r\n        \"maxLength\": [{ type: core.Input },],\r\n        \"showTail\": [{ type: core.Input },],\r\n        \"data\": [{ type: core.Input },],\r\n    };\r\n    return TextShowLessComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar TextShowMoreLessModule = (function () {\r\n    function TextShowMoreLessModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TextShowMoreLessModule.forRoot = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            ngModule: TextShowMoreLessModule,\r\n            providers: []\r\n        };\r\n    };\r\n    TextShowMoreLessModule.decorators = [\r\n        { type: core.NgModule, args: [{\r\n                    imports: [\r\n                        common.CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        TextShowLessComponent,\r\n                    ],\r\n                    exports: [\r\n                        TextShowLessComponent,\r\n                    ]\r\n                },] },\r\n    ];\r\n    return TextShowMoreLessModule;\r\n}());\n\nexports.TextShowMoreLessModule = TextShowMoreLessModule;\nexports.TextShowLessComponent = TextShowLessComponent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import { isPlatformServer, isPlatformBrowser, CommonModule } from '@angular/common';\nimport { EventEmitter, Component, forwardRef, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, Directive, Host, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: slick.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Slick component\n */\nvar SlickCarouselComponent = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function SlickCarouselComponent(el, zone, platformId) {\n        this.el = el;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.afterChange = new EventEmitter();\n        this.beforeChange = new EventEmitter();\n        this.breakpoint = new EventEmitter();\n        this.destroy = new EventEmitter();\n        this.init = new EventEmitter();\n        this.slides = [];\n        this.initialized = false;\n        this._removedSlides = [];\n        this._addedSlides = [];\n    }\n    /**\n     * On component destroy\n     */\n    /**\n     * On component destroy\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.ngOnDestroy = /**\n     * On component destroy\n     * @return {?}\n     */\n    function () {\n        this.unslick();\n    };\n    /**\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        this.ngAfterViewChecked();\n    };\n    /**\n     * On component view checked\n     */\n    /**\n     * On component view checked\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.ngAfterViewChecked = /**\n     * On component view checked\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n            /** @type {?} */\n            var nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n            if (!this.initialized) {\n                if (nextSlidesLength > 0) {\n                    this.initSlick();\n                }\n                // if nextSlidesLength is zere, do nothing\n            }\n            else if (nextSlidesLength === 0) { // unslick case\n                this.unslick();\n            }\n            else {\n                this._addedSlides.forEach((/**\n                 * @param {?} slickItem\n                 * @return {?}\n                 */\n                function (slickItem) {\n                    _this.slides.push(slickItem);\n                    _this.zone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    function () {\n                        _this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n                    }));\n                }));\n                this._addedSlides = [];\n                this._removedSlides.forEach((/**\n                 * @param {?} slickItem\n                 * @return {?}\n                 */\n                function (slickItem) {\n                    /** @type {?} */\n                    var idx = _this.slides.indexOf(slickItem);\n                    _this.slides = _this.slides.filter((/**\n                     * @param {?} s\n                     * @return {?}\n                     */\n                    function (s) { return s !== slickItem; }));\n                    _this.zone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    function () {\n                        _this.$instance.slick('slickRemove', idx);\n                    }));\n                }));\n                this._removedSlides = [];\n            }\n        }\n    };\n    /**\n     * init slick\n     */\n    /**\n     * init slick\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.initSlick = /**\n     * init slick\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.slides = this._addedSlides;\n        this._addedSlides = [];\n        this._removedSlides = [];\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this.$instance = jQuery(_this.el.nativeElement);\n            _this.$instance.on('init', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @return {?}\n             */\n            function (event, slick) {\n                _this.zone.run((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.init.emit({ event: event, slick: slick });\n                }));\n            }));\n            _this.$instance.slick(_this.config);\n            _this.zone.run((/**\n             * @return {?}\n             */\n            function () {\n                _this.initialized = true;\n                _this.currentIndex = (_this.config && _this.config.initialSlide) ? _this.config.initialSlide : 0;\n            }));\n            _this.$instance.on('afterChange', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @param {?} currentSlide\n             * @return {?}\n             */\n            function (event, slick, currentSlide) {\n                _this.zone.run((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.afterChange.emit({ event: event, slick: slick, currentSlide: currentSlide });\n                    _this.currentIndex = currentSlide;\n                }));\n            }));\n            _this.$instance.on('beforeChange', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @param {?} currentSlide\n             * @param {?} nextSlide\n             * @return {?}\n             */\n            function (event, slick, currentSlide, nextSlide) {\n                _this.zone.run((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.beforeChange.emit({ event: event, slick: slick, currentSlide: currentSlide, nextSlide: nextSlide });\n                    _this.currentIndex = nextSlide;\n                }));\n            }));\n            _this.$instance.on('breakpoint', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @param {?} breakpoint\n             * @return {?}\n             */\n            function (event, slick, breakpoint) {\n                _this.zone.run((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.breakpoint.emit({ event: event, slick: slick, breakpoint: breakpoint });\n                }));\n            }));\n            _this.$instance.on('destroy', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @return {?}\n             */\n            function (event, slick) {\n                _this.zone.run((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.destroy.emit({ event: event, slick: slick });\n                    _this.initialized = false;\n                }));\n            }));\n        }));\n    };\n    /**\n     * @param {?} slickItem\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.addSlide = /**\n     * @param {?} slickItem\n     * @return {?}\n     */\n    function (slickItem) {\n        this._addedSlides.push(slickItem);\n    };\n    /**\n     * @param {?} slickItem\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.removeSlide = /**\n     * @param {?} slickItem\n     * @return {?}\n     */\n    function (slickItem) {\n        this._removedSlides.push(slickItem);\n    };\n    /**\n     * Slick Method\n     */\n    /**\n     * Slick Method\n     * @param {?} index\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.slickGoTo = /**\n     * Slick Method\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var _this = this;\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this.$instance.slick('slickGoTo', index);\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.slickNext = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this.$instance.slick('slickNext');\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.slickPrev = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this.$instance.slick('slickPrev');\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.slickPause = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this.$instance.slick('slickPause');\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.slickPlay = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this.$instance.slick('slickPlay');\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.unslick = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.$instance) {\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                _this.$instance.slick('unslick');\n            }));\n            this.$instance = undefined;\n        }\n        this.initialized = false;\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    SlickCarouselComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        if (this.initialized) {\n            /** @type {?} */\n            var config = changes['config'];\n            if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n                /** @type {?} */\n                var refresh_1 = config.currentValue['refresh'];\n                /** @type {?} */\n                var newOptions_1 = Object.assign({}, config.currentValue);\n                delete newOptions_1['refresh'];\n                this.zone.runOutsideAngular((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.$instance.slick('slickSetOption', newOptions_1, refresh_1);\n                }));\n            }\n        }\n    };\n    SlickCarouselComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngx-slick-carousel',\n                    exportAs: 'slick-carousel',\n                    providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef((/**\n                             * @return {?}\n                             */\n                            function () { return SlickCarouselComponent; })),\n                            multi: true\n                        }],\n                    template: '<ng-content></ng-content>'\n                }] }\n    ];\n    /** @nocollapse */\n    SlickCarouselComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n    ]; };\n    SlickCarouselComponent.propDecorators = {\n        config: [{ type: Input }],\n        afterChange: [{ type: Output }],\n        beforeChange: [{ type: Output }],\n        breakpoint: [{ type: Output }],\n        destroy: [{ type: Output }],\n        init: [{ type: Output }]\n    };\n    return SlickCarouselComponent;\n}());\nif (false) {\n    /** @type {?} */\n    SlickCarouselComponent.prototype.config;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.afterChange;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.beforeChange;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.breakpoint;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.destroy;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.init;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.$instance;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.currentIndex;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.slides;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickCarouselComponent.prototype._removedSlides;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickCarouselComponent.prototype._addedSlides;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickCarouselComponent.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickCarouselComponent.prototype.zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickCarouselComponent.prototype.platformId;\n}\nvar SlickItemDirective = /** @class */ (function () {\n    function SlickItemDirective(el, platformId, carousel) {\n        this.el = el;\n        this.platformId = platformId;\n        this.carousel = carousel;\n    }\n    /**\n     * @return {?}\n     */\n    SlickItemDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.addSlide(this);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    SlickItemDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.removeSlide(this);\n        }\n    };\n    SlickItemDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngxSlickItem]',\n                },] }\n    ];\n    /** @nocollapse */\n    SlickItemDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n        { type: SlickCarouselComponent, decorators: [{ type: Host }] }\n    ]; };\n    return SlickItemDirective;\n}());\nif (false) {\n    /** @type {?} */\n    SlickItemDirective.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickItemDirective.prototype.platformId;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickItemDirective.prototype.carousel;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar SlickCarouselModule = /** @class */ (function () {\n    function SlickCarouselModule() {\n    }\n    SlickCarouselModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [\n                        SlickCarouselComponent,\n                        SlickItemDirective,\n                    ],\n                    exports: [\n                        SlickCarouselComponent,\n                        SlickItemDirective,\n                    ]\n                },] }\n    ];\n    return SlickCarouselModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-slick-carousel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { SlickCarouselComponent, SlickCarouselModule, SlickItemDirective };\n//# sourceMappingURL=ngx-slick-carousel.js.map\n","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row card-container\\\">\\n        <div class=\\\"col-3 card-box\\\">\\n            <br><h1>{{total_likes}}</h1>\\n                <h3>Total Likes</h3>\\n            </div>\\n        <div class=\\\"col-3 card-box\\\">\\n               <br><h1>{{total_dislikes}}</h1>\\n                <h3>Total Dislikes</h3>\\n            </div>\\n        <div class=\\\"col-3 card-box\\\">\\n            <br><h1>{{total_viewes}}</h1>\\n                <h3>Total Views</h3>\\n        </div>\\n        <div class=\\\"col-3 card-box\\\">\\n            <br><h1>{{total_shares}}</h1>\\n                <h3>Total Shares</h3>\\n        </div>\\n        <div class=\\\"col-3 card-box\\\">\\n            <br><h1>{{total_downloads}}</h1>\\n                <h3>Total Downloads</h3>\\n        </div>\\n        <div class=\\\"col-3 card-box\\\">\\n            <br><h1>{{total_users}}</h1>\\n                <h3>Total Users</h3>\\n        </div>\\n    </div>\\n</div>\";","export default \"<p>excel-report works!</p>\\n\";","export default \"<p>forwarded-report works!</p>\\n\";","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header card-header-primary\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <h4 class=\\\"card-title\\\">Mobile Users</h4>\\n              </div>\\n            </div>\\n          </div>\\n          <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n              <th mat-header-cell *matHeaderCellDef> Id </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" > {{row.id}} </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <!-- <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef style=\\\"padding-left:51px !important;\\\"> Name </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"padding-left:51px !important;\\\"> {{row.name}} </td>\\n            </ng-container> -->\\n\\n            <!-- Email Column -->\\n            <ng-container matColumnDef=\\\"email\\\" *ngIf=\\\"blur_email\\\">\\n              <th mat-header-cell *matHeaderCellDef style=\\\"padding-left:51px !important;\\\"> Email </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"  style=\\\"padding-left:51px !important;\\\"> {{row.maskemail}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"email\\\" *ngIf=\\\"clear_email\\\">\\n              <th mat-header-cell *matHeaderCellDef style=\\\"padding-left:51px !important;\\\"> Email </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"padding-left:51px !important;\\\"  > {{row.email}} </td>\\n            </ng-container>\\n\\n            <!-- Mobile number Column -->\\n            <ng-container matColumnDef=\\\"gender\\\">\\n              <th mat-header-cell *matHeaderCellDef> Gender </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.gender}} </td>\\n            </ng-container>\\n\\n            <!-- Role Column -->\\n            <ng-container matColumnDef=\\\"age\\\">\\n              <th mat-header-cell *matHeaderCellDef> Age </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.age}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          </table>\\n          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","export default \"<p>sent-report works!</p>\\n\";","export default \"<p>total-messages works!</p>\\n\";","export default \"<div class=\\\"container section1\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n\\n      <mat-card class=\\\"overide_card\\\">\\n        <mat-card-content>\\n          <div class=\\\"text-center pb-1\\\">\\n            <p *ngIf=\\\"upload_fail\\\" class=\\\"font_size_p padding_content\\\">Upload to Youtube channel has Failed,<br> Please\\n              try Again</p>\\n            <p *ngIf=\\\"upload_quota\\\" class=\\\"font_size_p padding_content2\\\">You have exceeded daily quota <br> for\\n              Uploading Videos, </p>\\n            <p *ngIf=\\\"upload_quota\\\" class=\\\"font_size_p padding_content2\\\">Please work with Youtube team <br> to get extra\\n              quota.</p>\\n            <p *ngIf=\\\"upload_another\\\" class=\\\"font_size_p padding_content2\\\">You have uploaded the Video to<br> a\\n              different youtube channel\\n            </p>\\n            <p *ngIf=\\\"upload_another\\\" class=\\\"font_size_p padding_content2\\\">\\n              Please Upload again by Selecting <br> youtube channel {{status_msg}}.</p>\\n            <!-- <p *ngIf=\\\"upload_fail\\\" class=\\\"font_size_p padding_content\\\">Upload to Youtube channel has Failed,<br> Please\\n              try Again</p> -->\\n            <p  *ngIf=\\\"upload_success\\\" class=\\\"font_size_p padding_content\\\">You have successfully uploaded the <br> Video\\n              to {{status_msg}} youtube channel.</p>\\n            <button mat-raised-button class=\\\"mat-primary full-width mb-1 btn_class\\\" (click)=\\\"redirect_link()\\\">\\n              Go to Videos\\n            </button>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\";","export default \".upload{\\n    text-align:center; \\n    color: black; \\n    font-weight: bolder;\\n}\\n.main-content {\\n    margin-top: 31px;\\n    padding: 30px 15px;\\n    height: 69px;\\n}\\n.card-stats .card-header.card-header-icon i {\\n    font-size: 60px;\\n    line-height: 87px;\\n    width: 199px;\\n    height: 88px;\\n    text-align: center;\\n}\\n.card [class*=card-header-] .card-icon, .card [class*=card-header-] .card-text {\\n    border-radius: 0px;\\n    background-color: #999999;\\n    width: 259px;\\n    padding: 20px;\\n    margin: 0px -7%; \\n    background:lightblue; \\n}\\n.card-stats .card-header.card-header-icon, .card-stats .card-header.card-header-text {\\n    text-align: left;\\n    height: 211px;\\n}\\n.card .card-category .material-icons {\\n    position: absolute;\\n    font-size: xx-large;\\n    top: 138px;\\n    color: black;\\n    line-height: 1;\\n    margin: 0px 71%;\\n}\\n.card-box {\\n    margin: 2px 2px;\\n    border: 1px solid gray;\\n    text-align: center;\\n    height: 164px;\\n    background: #f2f2f2;\\n    color: #333333;\\n}\\n.card-container {\\n    padding: 6%;\\n    margin: 80px 0px;\\n}\\nh1 {\\n    padding: 15px;\\n}\\nh3{\\n    margin-top: -22px;\\n}\\n@media (min-width:1024px) and (max-width:1279px){\\n    .card-container {\\n        width:123%\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osYUFBYTtJQUNiLGVBQWU7SUFDZixvQkFBb0I7QUFDeEI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixZQUFZO0lBQ1osY0FBYztJQUNkLGVBQWU7QUFDbkI7QUFDQTtJQUNJLGVBQWU7SUFDZixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsY0FBYztBQUNsQjtBQUNBO0lBQ0ksV0FBVztJQUNYLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksYUFBYTtBQUNqQjtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSTtRQUNJO0lBQ0o7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51cGxvYWR7XG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7IFxuICAgIGNvbG9yOiBibGFjazsgXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cbi5tYWluLWNvbnRlbnQge1xuICAgIG1hcmdpbi10b3A6IDMxcHg7XG4gICAgcGFkZGluZzogMzBweCAxNXB4O1xuICAgIGhlaWdodDogNjlweDtcbn1cbi5jYXJkLXN0YXRzIC5jYXJkLWhlYWRlci5jYXJkLWhlYWRlci1pY29uIGkge1xuICAgIGZvbnQtc2l6ZTogNjBweDtcbiAgICBsaW5lLWhlaWdodDogODdweDtcbiAgICB3aWR0aDogMTk5cHg7XG4gICAgaGVpZ2h0OiA4OHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5jYXJkIFtjbGFzcyo9Y2FyZC1oZWFkZXItXSAuY2FyZC1pY29uLCAuY2FyZCBbY2xhc3MqPWNhcmQtaGVhZGVyLV0gLmNhcmQtdGV4dCB7XG4gICAgYm9yZGVyLXJhZGl1czogMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7XG4gICAgd2lkdGg6IDI1OXB4O1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgbWFyZ2luOiAwcHggLTclOyBcbiAgICBiYWNrZ3JvdW5kOmxpZ2h0Ymx1ZTsgXG59XG4uY2FyZC1zdGF0cyAuY2FyZC1oZWFkZXIuY2FyZC1oZWFkZXItaWNvbiwgLmNhcmQtc3RhdHMgLmNhcmQtaGVhZGVyLmNhcmQtaGVhZGVyLXRleHQge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgaGVpZ2h0OiAyMTFweDtcbn1cbi5jYXJkIC5jYXJkLWNhdGVnb3J5IC5tYXRlcmlhbC1pY29ucyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGZvbnQtc2l6ZTogeHgtbGFyZ2U7XG4gICAgdG9wOiAxMzhweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgbWFyZ2luOiAwcHggNzElO1xufVxuLmNhcmQtYm94IHtcbiAgICBtYXJnaW46IDJweCAycHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxNjRweDtcbiAgICBiYWNrZ3JvdW5kOiAjZjJmMmYyO1xuICAgIGNvbG9yOiAjMzMzMzMzO1xufVxuLmNhcmQtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA2JTtcbiAgICBtYXJnaW46IDgwcHggMHB4O1xufVxuaDEge1xuICAgIHBhZGRpbmc6IDE1cHg7XG59XG5oM3tcbiAgICBtYXJnaW4tdG9wOiAtMjJweDtcbn0gXG5AbWVkaWEgKG1pbi13aWR0aDoxMDI0cHgpIGFuZCAobWF4LXdpZHRoOjEyNzlweCl7XG4gICAgLmNhcmQtY29udGFpbmVyIHtcbiAgICAgICAgd2lkdGg6MTIzJVxuICAgIH1cbn0iXX0= */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, \n  MatDialogRef,  } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DashboardService } from './dashboard.service';\nimport { Routes, Router } from '@angular/router';\nimport * as Chartist from 'chartist';\nimport { Title } from '@angular/platform-browser';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  tableData: [];\n  total_likes:any;\n  total_dislikes:any;\n  total_viewes:any;\n  total_shares:any;\n  total_downloads:any;\n  total_users:any;\n\n  constructor(\n    public service: DashboardService,\n  ) { }\n  ngOnInit() {\n    let payload = {};\n    this.getlikes(payload);\n  }\n  getlikes(payload) {\n    this.service.getlikes(payload)\n      .subscribe(response => {\n        console.log(response, \"response get analytics\");\n        // this.tableData = response;\n        this.total_likes=response[0].total_likes;\n        this.total_dislikes=response[0].total_dislikes;\n        this.total_viewes=response[2].total_views;\n        this.total_downloads=response[0].total_downloads;\n        this.total_shares=response[0].total_share;\n        this.total_users=response[1].tota_users;\n\n        // console.log(this.total_likes,\"this.total_likes\");\n        if(this.total_likes===null){\n          this.total_likes=0;\n        }\n        if(this.total_dislikes===null){\n          this.total_dislikes=0;\n        }\n        if(this.total_viewes===null){\n          this.total_viewes=0;\n        }\n        if(this.total_downloads===null){\n          this.total_downloads=0;\n        }\n        if(this.total_shares===null){\n          this.total_shares=0;\n        }\n        if(this.total_users===null){\n          this.total_users=0;\n        }\n\n\n      });\n\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { UrlConstants } from 'app/helpers/urlconstant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  constructor(private httpClient:HttpClient){}\n  getlikes(payload):Observable<any> {\n    const url = UrlConstants.MAINURL + UrlConstants.getlikes;\n    // console.log(url,\"outgoing url\");\n    return this.httpClient.post<any>(url,payload);\n\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4Y2VsLXJlcG9ydC9leGNlbC1yZXBvcnQuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-excel-report',\n  templateUrl: './excel-report.component.html',\n  styleUrls: ['./excel-report.component.css']\n})\nexport class ExcelReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcndhcmRlZC1yZXBvcnQvZm9yd2FyZGVkLXJlcG9ydC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forwarded-report',\n  templateUrl: './forwarded-report.component.html',\n  styleUrls: ['./forwarded-report.component.css']\n})\nexport class ForwardedReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { TotalMessagesComponent } from './../../total-messages/total-messages.component';\nimport { ExcelReportComponent } from './../../excel-report/excel-report.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminLayoutRoutes } from './admin-layout.routing';\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\n\n// import {\n//   MatButtonModule,\n//   MatInputModule,\n//   MatRippleModule,\n//   MatFormFieldModule,\n//   MatTooltipModule,\n//   MatSelectModule,\n//   MatCardModule,\n//   MatTableModule,\n//   MatTableDataSource,\n//   MatSortModule,\n//   MatIconModule,\n//   MatDividerModule,\n//   MatSlideToggleModule,\n\n// } from '@angular/material';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTableModule,MatTableDataSource} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatGridListModule} from '@angular/material/grid-list';\n// import {} from '@angular/material/grid-tile';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { PortalUsersComponent,DeleteUserDialog,AddUserDialog } from 'app/portal-users/portal-users.component';\nimport { from } from 'rxjs';\nimport { ResetPasswordComponent } from 'app/reset-password/reset-password.component';\nimport { StateComponent } from 'app/state/state.component';\nimport { CityComponent } from 'app/city/city.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\n// import { FileUploader } from 'ng2-file-upload';\n// import { MatFileUploadModule ,FileSelectDirective, FileDropDirective, FileUploader } from 'ng2-file-upload/ng2-file-upload';\n// import { BrowserModule } from '@angular/platform-browser';\n// import { MatFileUploadModule } from '@webacad/ng-mat-file-upload';\n// import { MatFileUploadModule,BrowserModule }\nimport { VideoUploadComponent } from 'app/video-upload/video-upload.component';\nimport { ReadMoreComponent } from 'app/read-more/read-more';\nimport { MobileUsersComponent } from 'app/mobile-users/mobile-users.component'\nimport { DefaultSettingsComponent, defaultpasswordDialog } from 'app/default-settings/default-settings.component';\nimport { SlickCarouselModule } from 'ngx-slick-carousel';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { TextShowMoreLessModule } from 'angular2-text-show-more-less';\nimport { UploadResponseComponent } from 'app/video-upload/upload-response/upload-response.component';\nimport { SendMessageComponent } from '../../send-message/send-message.component';\nimport { UploadExcelComponent } from '../../upload-excel/upload-excel.component';\nimport { ForwardMessageComponent } from '../../forward-message/forward-message.component';\nimport { SentReportComponent } from '../../sent-report/sent-report.component';\nimport { ForwardedReportComponent } from '../../forwarded-report/forwarded-report.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // FontAwesomeModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatSortModule,\n    MatIconModule,\n    MatPaginatorModule,\n    HttpClientModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatGridListModule,\n    MatSlideToggleModule,\n    CarouselModule,\n    SlickCarouselModule,\n    NgxSpinnerModule,\n    TextShowMoreLessModule,\n\n\n    // FileUploader,\n    // MatFileUploadModule,\n\n  ],\n  declarations: [\n    DashboardComponent,\n    PortalUsersComponent,\n    StateComponent,\n    CityComponent,\n    VideoUploadComponent,\n    ReadMoreComponent,\n    MobileUsersComponent,\n    DefaultSettingsComponent,\n    UploadResponseComponent,\n    SendMessageComponent,\n    UploadExcelComponent,\n    ForwardMessageComponent,\n    SentReportComponent,\n    ForwardedReportComponent,\n    ExcelReportComponent,\n    TotalMessagesComponent\n    // defaultpasswordDialog\n    // VideoDetailsDialog\n    // VideouploadComponent\n    // ResetPasswordComponent\n    \n\n  ],\n  entryComponents:[\n    // VideoDetailsDialog\n    // defaultpasswordDialog\n  ],\n})\n\nexport class AdminLayoutModule {}\n","import { TotalMessagesComponent } from './../../total-messages/total-messages.component';\nimport { ExcelReportComponent } from './../../excel-report/excel-report.component';\nimport { ForwardedReportComponent } from './../../forwarded-report/forwarded-report.component';\nimport { SentReportComponent } from './../../sent-report/sent-report.component';\nimport { ForwardMessageComponent } from './../../forward-message/forward-message.component';\nimport { UploadExcelComponent } from './../../upload-excel/upload-excel.component';\nimport { SendMessageComponent } from './../../send-message/send-message.component';\nimport { Routes } from '@angular/router';\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\nimport { PortalUsersComponent } from 'app/portal-users/portal-users.component';\nimport { ResetPasswordComponent } from 'app/reset-password/reset-password.component';\nimport { StateComponent } from 'app/state/state.component';\nimport { CityComponent } from 'app/city/city.component';\nimport { VideoUploadComponent } from 'app/video-upload/video-upload.component';\nimport { MobileUsersComponent } from 'app/mobile-users/mobile-users.component';\nimport { DefaultSettingsComponent } from 'app/default-settings/default-settings.component';\nimport { UploadResponseComponent } from 'app/video-upload/upload-response/upload-response.component';\n// import { AdminLayoutComponent } from './admin-layout.component';\n\n\n\nexport const AdminLayoutRoutes: Routes = [\n    { path: 'dashboard', component: DashboardComponent },\n    { path: 'video-upload', component: VideoUploadComponent },\n    { path: 'portal-users', component: PortalUsersComponent },\n    { path: 'mobile-users', component: MobileUsersComponent },\n    { path: 'default-settings', component: DefaultSettingsComponent },\n    { path: 'organization', component: StateComponent },\n    { path: 'state', component: CityComponent },\n    { path: 'video-response', component: UploadResponseComponent },\n    {path: 'send-message', component: SendMessageComponent},\n    {path: 'upload-excel', component: UploadExcelComponent},\n    {path: 'forward-message', component: ForwardMessageComponent},\n    {path: 'sent-report', component: SentReportComponent},\n    {path: 'forwarded-report', component: ForwardedReportComponent},\n    {path: 'excel-report', component: ExcelReportComponent},\n    {path: 'total-messages', component: TotalMessagesComponent}\n];\n","export default \".card-title {\\n  margin: 5px 12px !important;\\n  color: black;\\n}\\n\\n.blur_text {\\n  color: transparent;\\n  text-shadow: 0 0 8px #000;\\n}\\n\\ntd.mat-cell:first-of-type, td.mat-footer-cell:first-of-type, th.mat-header-cell:first-of-type {\\n  padding-left: 92px;\\n  width: 38%;\\n}\\n\\n.card {\\n  width: 80% !important;\\n}\\n\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  table {\\n    width: 100%;\\n  }\\n}\\n\\n@supports (-ms-ime-align: auto) {\\n  table {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9iaWxlLXVzZXJzL0Q6XFxhcHBiZWVcXHByYXNhbm5hYXBwYmVlLW9ubGluZS12aWRlby1zdHJlYW0tZnJvbnRlbmQtMGZiNmVkOTFiMzY0L3NyY1xcYXBwXFxtb2JpbGUtdXNlcnNcXG1vYmlsZS11c2Vycy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9iaWxlLXVzZXJzL21vYmlsZS11c2Vycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDJCQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDSix5QkFBQTtBQ0NBOztBRENBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0FDRUY7O0FEQUE7RUFDRSxxQkFBQTtBQ0dGOztBRERBO0VBQ0k7SUFDRSxXQUFBO0VDSUo7QUFDRjs7QURGQTtFQUNJO0lBQ0UsV0FBQTtFQ0lKO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2JpbGUtdXNlcnMvbW9iaWxlLXVzZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtdGl0bGV7XG4gICAgbWFyZ2luOiA1cHggMTJweCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiBibGFjaztcbn1cblxuLmJsdXJfdGV4dHtcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG50ZXh0LXNoYWRvdzogMCAwIDhweCAjMDAwO1xufVxudGQubWF0LWNlbGw6Zmlyc3Qtb2YtdHlwZSwgdGQubWF0LWZvb3Rlci1jZWxsOmZpcnN0LW9mLXR5cGUsIHRoLm1hdC1oZWFkZXItY2VsbDpmaXJzdC1vZi10eXBlIHtcbiAgcGFkZGluZy1sZWZ0OiA5MnB4O1xuICB3aWR0aDogMzglO1xufVxuLmNhcmR7XG4gIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbn1cbkBtZWRpYSBhbGwgYW5kICgtbXMtaGlnaC1jb250cmFzdDogbm9uZSksICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSB7XG4gICAgdGFibGV7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cbkBzdXBwb3J0cyAoLW1zLWltZS1hbGlnbjogYXV0bykge1xuICAgIHRhYmxle1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG4gICIsIi5jYXJkLXRpdGxlIHtcbiAgbWFyZ2luOiA1cHggMTJweCAhaW1wb3J0YW50O1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5ibHVyX3RleHQge1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtc2hhZG93OiAwIDAgOHB4ICMwMDA7XG59XG5cbnRkLm1hdC1jZWxsOmZpcnN0LW9mLXR5cGUsIHRkLm1hdC1mb290ZXItY2VsbDpmaXJzdC1vZi10eXBlLCB0aC5tYXQtaGVhZGVyLWNlbGw6Zmlyc3Qtb2YtdHlwZSB7XG4gIHBhZGRpbmctbGVmdDogOTJweDtcbiAgd2lkdGg6IDM4JTtcbn1cblxuLmNhcmQge1xuICB3aWR0aDogODAlICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSBhbGwgYW5kICgtbXMtaGlnaC1jb250cmFzdDogbm9uZSksICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSB7XG4gIHRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuQHN1cHBvcnRzICgtbXMtaW1lLWFsaWduOiBhdXRvKSB7XG4gIHRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufSJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { MatTableDataSource} from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MobileUserService } from 'app/mobile-users/mobile-users.service'\nimport { from } from 'rxjs';\nimport {AuthService} from '../auth/auth.service';\n\n\nexport interface PeriodicElement {\n  id: string;\n  // name: string;\n  email: string;\n  age: string;\n  gender: string;\n}\n@Component({\n  selector: 'app-mobile-users',\n  templateUrl: './mobile-users.component.html',\n  styleUrls: ['./mobile-users.component.scss']\n})\nexport class MobileUsersComponent implements OnInit {\n    tableData : PeriodicElement [] = [];\n    blur_email:boolean=false;\n    clear_email:boolean=false;\n\n  displayedColumns: string[] = ['email', 'gender', 'age'];\n  public dataSource = new MatTableDataSource<any>(this.tableData);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor( public service :MobileUserService,\n    public authservice:AuthService) { }\n\n  ngOnInit() {\n    console.log(this.authservice.role_id,\"mobile role id\")\n    let payload = {};\n    this.getMobileUsers(payload);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.paginator = this.paginator;\n\n    if(this.authservice.role_id==2){\n      this.blur_email=true;\n      this.clear_email=false;\n    }else if(this.authservice.role_id==3){\n      this.clear_email=true;\n      this.blur_email=false;\n    }\n\n    if(this.authservice.role_id===undefined){\n      this.authservice.role_id=localStorage.getItem('role');\n      if(this.authservice.role_id==2){\n        this.blur_email=true;\n        this.clear_email=false;\n      }else if(this.authservice.role_id==3){\n        this.clear_email=true;\n        this.blur_email=false;\n      }\n\n    }\n  }\n  getMobileUsers(payload) {\n    this.service.getMobileUsers(payload)\n      .subscribe(response => {\n      this.tableData = response;\n      this.tableData.forEach((element, index)=>{\n        var maskid = \"\";\n        var myemailId =  element['email'];\n        var prefix= myemailId.substring(0, myemailId .lastIndexOf(\"@\"));\n        var postfix= myemailId.substring(myemailId .lastIndexOf(\"@\"));\n        for(var i=0; i<prefix.length; i++){\n          if(i == 0 || i == prefix.length - 1) {   \n              maskid = maskid + prefix[i].toString();\n          }\n          else {\n              maskid = maskid + \"*\";\n          }\n        }\n       maskid =maskid +postfix;\n       element['maskemail']=maskid;\n       })\n      this.dataSource.data = this.tableData;\n      })\n      \n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { UrlConstants } from 'app/helpers/urlconstant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MobileUserService {\n  constructor(private httpClient:HttpClient){}\n\n  getMobileUsers(payload):Observable<any> {\n    const url = UrlConstants.MAINURL + UrlConstants.getMobileUsers;\n    // console.log(url,\"outgoing url\");\n    return this.httpClient.post<any>(url,payload);\n\n  }\n}","export default \"div.collapsed {\\n  display: -webkit-inline-box;\\n  display: inline-block;\\n  font-size: 100%;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  width: 85%;\\n}\\n\\n.readMore {\\n  margin-top: -3px !important;\\n  line-height: 1.4 !important;\\n}\\n\\n.isCollapsed {\\n  width: 85%;\\n}\\n\\n.cb {\\n  clear: both;\\n  height: 0;\\n}\\n\\n.pull-right {\\n  float: right;\\n}\\n\\n.pull-left {\\n  float: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVhZC1tb3JlL0Q6XFxhcHBiZWVcXHByYXNhbm5hYXBwYmVlLW9ubGluZS12aWRlby1zdHJlYW0tZnJvbnRlbmQtMGZiNmVkOTFiMzY0L3NyY1xcYXBwXFxyZWFkLW1vcmVcXHJlYWQtbW9yZS5zY3NzIiwic3JjL2FwcC9yZWFkLW1vcmUvcmVhZC1tb3JlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDRSwyQkFBQTtFQUNBLHFCQUFBO0VBQ0EsZUFQUztFQVFULG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLFVBQUE7QUNIRjs7QURNQTtFQUNJLDJCQUFBO0VBQ0EsMkJBQUE7QUNISjs7QURNQTtFQUNJLFVBQUE7QUNISjs7QURNQTtFQUNJLFdBQUE7RUFDQSxTQUFBO0FDSEo7O0FETUE7RUFDRSxZQUFBO0FDSEY7O0FETUE7RUFDRSxXQUFBO0FDSEYiLCJmaWxlIjoic3JjL2FwcC9yZWFkLW1vcmUvcmVhZC1tb3JlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkZm9udC1zaXplOjEwMCU7XG4kbGluZS1oZWlnaHQ6IDEuNTtcbiRsaW5lcy10by1zaG93OiAxO1xuXG5kaXYuY29sbGFwc2VkIHtcbiAgZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtYm94O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdpZHRoOiA4NSU7XG59XG5cbi5yZWFkTW9yZSB7XG4gICAgbWFyZ2luLXRvcDogLTNweCAhaW1wb3J0YW50O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQgIWltcG9ydGFudDtcbn1cblxuLmlzQ29sbGFwc2VkIHtcbiAgICB3aWR0aDogODUlO1xufVxuXG4uY2Ige1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGhlaWdodDogMDtcbn1cblxuLnB1bGwtcmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5wdWxsLWxlZnQge1xuICBmbG9hdDogbGVmdDtcbn0iLCJkaXYuY29sbGFwc2VkIHtcbiAgZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtYm94O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdpZHRoOiA4NSU7XG59XG5cbi5yZWFkTW9yZSB7XG4gIG1hcmdpbi10b3A6IC0zcHggIWltcG9ydGFudDtcbiAgbGluZS1oZWlnaHQ6IDEuNCAhaW1wb3J0YW50O1xufVxuXG4uaXNDb2xsYXBzZWQge1xuICB3aWR0aDogODUlO1xufVxuXG4uY2Ige1xuICBjbGVhcjogYm90aDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4ucHVsbC1yaWdodCB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLnB1bGwtbGVmdCB7XG4gIGZsb2F0OiBsZWZ0O1xufSJdfQ== */\";","import { Component, ViewEncapsulation, Input, AfterViewInit, ElementRef } from \"@angular/core\";\n\n\n@Component({\n  selector: \"read-more\",\n  template: `\n        <div [class.collapsed]=\"isCollapsed\" [ngClass]=\"{'isCollapsed': !isCollapsed}\" class=\"pull-left pt-2 readMore\">\n            <ng-content></ng-content>\n        </div>\n        <div class='cb'></div>\n    `,\n  styleUrls: [\"./read-more.scss\"],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ReadMoreComponent implements AfterViewInit {\n  @Input() dataLength: boolean;\n  public isCollapsed: boolean = true;\n  public isCollapsable: boolean = false;\n  constructor(private elementRef: ElementRef) {}\n  ngAfterViewInit() {\n\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbnQtcmVwb3J0L3NlbnQtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sent-report',\n  templateUrl: './sent-report.component.html',\n  styleUrls: ['./sent-report.component.css']\n})\nexport class SentReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvdGFsLW1lc3NhZ2VzL3RvdGFsLW1lc3NhZ2VzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-total-messages',\n  templateUrl: './total-messages.component.html',\n  styleUrls: ['./total-messages.component.css']\n})\nexport class TotalMessagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \".section1 {\\n  height: 100vh;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.overide_card {\\n  width: 500px;\\n  height: 230px;\\n  margin: 0 auto;\\n}\\n\\n.font_size_p {\\n  font-size: 20px;\\n  color: #1f467f;\\n}\\n\\n.padding_content {\\n  padding-top: 10%;\\n}\\n\\n.padding_content1 {\\n  padding-top: 8%;\\n}\\n\\n.padding_content2 {\\n  padding-top: 2%;\\n}\\n\\n.btn_class {\\n  width: 30%;\\n  background: #1f467f;\\n  color: #fff;\\n  border-radius: 20px;\\n  padding: 0.5%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlkZW8tdXBsb2FkL3VwbG9hZC1yZXNwb25zZS9EOlxcYXBwYmVlXFxwcmFzYW5uYWFwcGJlZS1vbmxpbmUtdmlkZW8tc3RyZWFtLWZyb250ZW5kLTBmYjZlZDkxYjM2NC9zcmNcXGFwcFxcdmlkZW8tdXBsb2FkXFx1cGxvYWQtcmVzcG9uc2VcXHVwbG9hZC1yZXNwb25zZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlkZW8tdXBsb2FkL3VwbG9hZC1yZXNwb25zZS91cGxvYWQtcmVzcG9uc2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUNDSjs7QURFRTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0YsY0FBQTtBQ0NGOztBREdFO0VBQ0UsZUFBQTtFQUNBLGNBQUE7QUNBSjs7QURHRTtFQUNFLGdCQUFBO0FDQUo7O0FER0U7RUFDRSxlQUFBO0FDQUo7O0FER0U7RUFDSSxlQUFBO0FDQU47O0FER0U7RUFDRSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC92aWRlby11cGxvYWQvdXBsb2FkLXJlc3BvbnNlL3VwbG9hZC1yZXNwb25zZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWN0aW9uMSB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cblxuICAub3ZlcmlkZV9jYXJkIHtcbiAgICB3aWR0aDogNTAwcHg7XG4gICAgaGVpZ2h0OjIzMHB4O1xuICBtYXJnaW46IDAgYXV0bztcblxuICB9XG5cbiAgLmZvbnRfc2l6ZV9we1xuICAgIGZvbnQtc2l6ZToyMHB4O1xuICAgIGNvbG9yOiAjMWY0NjdmO1xuICB9XG5cbiAgLnBhZGRpbmdfY29udGVudHtcbiAgICBwYWRkaW5nLXRvcDoxMCU7XG4gIH1cblxuICAucGFkZGluZ19jb250ZW50MXtcbiAgICBwYWRkaW5nLXRvcDo4JTtcbiAgfVxuXG4gIC5wYWRkaW5nX2NvbnRlbnQye1xuICAgICAgcGFkZGluZy10b3A6MiU7XG4gIH1cblxuICAuYnRuX2NsYXNze1xuICAgIHdpZHRoOjMwJTsgIFxuICAgIGJhY2tncm91bmQ6ICMxZjQ2N2Y7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICBwYWRkaW5nOjAuNSU7XG4gIH0iLCIuc2VjdGlvbjEge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm92ZXJpZGVfY2FyZCB7XG4gIHdpZHRoOiA1MDBweDtcbiAgaGVpZ2h0OiAyMzBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5mb250X3NpemVfcCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgY29sb3I6ICMxZjQ2N2Y7XG59XG5cbi5wYWRkaW5nX2NvbnRlbnQge1xuICBwYWRkaW5nLXRvcDogMTAlO1xufVxuXG4ucGFkZGluZ19jb250ZW50MSB7XG4gIHBhZGRpbmctdG9wOiA4JTtcbn1cblxuLnBhZGRpbmdfY29udGVudDIge1xuICBwYWRkaW5nLXRvcDogMiU7XG59XG5cbi5idG5fY2xhc3Mge1xuICB3aWR0aDogMzAlO1xuICBiYWNrZ3JvdW5kOiAjMWY0NjdmO1xuICBjb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgcGFkZGluZzogMC41JTtcbn0iXX0= */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators, FormGroup, EmailValidator, FormBuilder } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { throwError, of } from 'rxjs';\n// import { AuthService } from 'src/app/auth/auth.service';\n// import { checkAndUpdateElementInline } from '@angular/core/src/view/element';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-upload-response',\n  templateUrl: './upload-response.component.html',\n  styleUrls: ['./upload-response.component.scss']\n})\nexport class UploadResponseComponent implements OnInit {\n\n  status_msg=\"\";\n  id_val=\"\";\n  display_msg=\"\";\n  upload_fail:boolean=false;\n  upload_quota:boolean=false;\n  upload_success:boolean=false;\n  upload_another:boolean=false;\n\n  constructor(\n    private route: ActivatedRoute,\n    public router:Router\n  ) { }\n\n  ngOnInit() {\n    this.id_val = this.route.snapshot.queryParamMap.get('id');\n    this.status_msg = this.route.snapshot.queryParamMap.get('ch');\n    // console.log(this.id_val,\"getting id value\");\n    // console.log(this.status_msg,\"getting status msg value\");\n   \n    if(this.id_val==\"1\"){\n      this.upload_fail=true;\n    }else if(this.id_val==\"2\"){\n      this.upload_quota=true;\n    }else if(this.id_val==\"3\"){\n      this.upload_another=true;\n    }else if(this.id_val==\"4\"){\n      this.upload_success=true;\n    }\n  }\n\n  redirect_link(){\n    this.router.navigate(['./video-upload']);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}